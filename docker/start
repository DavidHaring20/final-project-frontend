#! /bin/sh

set -eu;
set -o errexit;
set -o pipefail;

. /.env.build;

function regexEscape () {
  if [[ ! -z ${1+x} ]]; then
    echo -n "$1" | regexEscape;
  else
    sed -r 's/(\/|\$|\.|\*|\[|\]|\\\\|\^|\(|\)|\{|\}|\+|\?|\|)/\\\1/g';
  fi;
};

if [[ "$BUILD" == "release" ]]; then

  if [ -z "${API_URL+x}" ] || [[ "${API_URL}" == "" ]]; then
    echo "Missing required environment variable: API_URL";
    exit 1;
  fi;

  if [ -z "${BASE_URL+x}" ] || [[ "${BASE_URL}" == "" ]]; then
    export BASE_URL='http://localhost/';
  fi;

  export BASE_PATH_IES="$(url-parser --part=path "$BASE_URL" | sed 's/^$/\//' | sed 's/\/$//')/";
  export BASE_PATH_EES="$(url-parser --part=path "$BASE_URL" | sed 's/^$/\//' | sed 's/\(.\)\/$/\1/')";

  find /app -type f \( -name '*.js' -or -name '*.html' -or -name '*.css' \) | while read file; do
    sed "s/$(regexEscape "${VARKEY}_API_URL")/$(regexEscape "$API_URL")/g" -i "$file";
    sed "s/$(regexEscape "x://${VARKEY}_BASE_HOST/${VARKEY}_BASE_PATH")/$(regexEscape "$BASE_URL")/g" -i "$file";
    sed "s/$(regexEscape "/${VARKEY}_BASE_PATH/")/$(regexEscape "$BASE_PATH_IES")/g" -i "$file";
    sed "s/$(regexEscape "/${VARKEY}_BASE_PATH")/$(regexEscape "$BASE_PATH_EES")/g" -i "$file";
  done;

  su nobody -s /bin/sh -c 'caddy start --config /Caddyfile --adapter caddyfile';

fi;

if [[ "$BUILD" == "debug" ]]; then
  (cd /code && npm run serve -- --host 0.0.0.0 --port 80) &
fi;

timeout 15 sh -c 'while ! nc -z localhost 80; do sleep 0.1; done;'

touch /.started;

echo -e '\e[1;36mContainer started successfully!\e[0m';

while [ 1 == 1 ]; do sleep 3600; done;
